// Mocks generated by Mockito 5.4.5 from annotations
// in clickvagas/test/parking_spot_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:clickvagas/data/data_functions.dart' as _i2;
import 'package:clickvagas/models/spot_parking_model.dart' as _i7;
import 'package:clickvagas/models/spot_card_info.dart' as _i6;
import 'package:clickvagas/models/spot_model.dart' as _i5;
import 'package:clickvagas/repository/parking_spot_repository.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDataFunctions_0 extends _i1.SmartFake implements _i2.DataFunctions {
  _FakeDataFunctions_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ParkingSpotRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockParkingSpotRepository extends _i1.Mock
    implements _i3.ParkingSpotRepository {
  MockParkingSpotRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.DataFunctions get dataFunctions =>
      (super.noSuchMethod(
            Invocation.getter(#dataFunctions),
            returnValue: _FakeDataFunctions_0(
              this,
              Invocation.getter(#dataFunctions),
            ),
          )
          as _i2.DataFunctions);

  @override
  _i4.Future<List<_i5.SpotModel>> createSpots(int? totalSpots) =>
      (super.noSuchMethod(
            Invocation.method(#createSpots, [totalSpots]),
            returnValue: _i4.Future<List<_i5.SpotModel>>.value(
              <_i5.SpotModel>[],
            ),
          )
          as _i4.Future<List<_i5.SpotModel>>);

  @override
  _i4.Future<List<_i5.SpotModel>> loadSpots() =>
      (super.noSuchMethod(
            Invocation.method(#loadSpots, []),
            returnValue: _i4.Future<List<_i5.SpotModel>>.value(
              <_i5.SpotModel>[],
            ),
          )
          as _i4.Future<List<_i5.SpotModel>>);

  @override
  _i4.Future<void> creatANewSpot(_i5.SpotModel? spot) =>
      (super.noSuchMethod(
            Invocation.method(#creatANewSpot, [spot]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> deleteSpot(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteSpot, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> registryEntryForSpot(_i5.SpotModel? spot, String? plate) =>
      (super.noSuchMethod(
            Invocation.method(#registryEntryForSpot, [spot, plate]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> registryExitForSpot(_i5.SpotModel? spot) =>
      (super.noSuchMethod(
            Invocation.method(#registryExitForSpot, [spot]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<List<_i6.SpotCardInfo>> loadSpotCardInfos() =>
      (super.noSuchMethod(
            Invocation.method(#loadSpotCardInfos, []),
            returnValue: _i4.Future<List<_i6.SpotCardInfo>>.value(
              <_i6.SpotCardInfo>[],
            ),
          )
          as _i4.Future<List<_i6.SpotCardInfo>>);

  @override
  _i4.Future<void> insertPlateWithSpot(_i7.ParkingSpotModel? parkingSpot) =>
      (super.noSuchMethod(
            Invocation.method(#insertPlateWithSpot, [parkingSpot]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<List<_i7.ParkingSpotModel>> getParkingSpots() =>
      (super.noSuchMethod(
            Invocation.method(#getParkingSpots, []),
            returnValue: _i4.Future<List<_i7.ParkingSpotModel>>.value(
              <_i7.ParkingSpotModel>[],
            ),
          )
          as _i4.Future<List<_i7.ParkingSpotModel>>);
}
